name: Backend CI/CD

on:
  push:
    branches:
      - develop-2.0
      - main
      - 'feature/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - develop-2.0
      - main
      - 'hotfix/**'
jobs:
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean compile

      - name: Upload target directory
        uses: actions/upload-artifact@v4
        with:
          name: backend-target
          path: backend/target

  # test-backend:
  #   name: Test Backend
  #   runs-on: ubuntu-latest
  #   needs: build-backend
  #   defaults:
  #     run:
  #       working-directory: backend
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Java
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '21'
  #         distribution: 'temurin'

  #     - name: Download build artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: backend-target
  #         path: backend/target

  #     - name: Run tests
  #       run: mvn test

  package-backend:
    name: Package Backend
    runs-on: ubuntu-latest
    # needs: test-backend
    needs: build-backend
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-target
          path: backend/target

      - name: Package JAR (skip tests)
        run: mvn package -DskipTests

      - name: Upload packaged JAR
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar

  deploy-backend:
    name: Deploy Backend to Heroku
    runs-on: ubuntu-latest
    needs: package-backend
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/hotfix/deployment-issue'
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: backend/target

      - name: Prepare Heroku Deploy Folder
        run: |
          mkdir deploy
          cp -a backend/. deploy/
          echo "java.runtime.version = 21" > deploy/system.properties

      - name: Set up Git and Push to Heroku
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          export PATH="$PATH:/app/.heroku/bin"

          heroku buildpacks:clear -a $HEROKU_APP_NAME
          heroku buildpacks:set heroku/java -a $HEROKU_APP_NAME

          cd deploy
          git init
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git

          git add .
          if ! git commit -m "Deploy from GitHub Actions"; then
            echo "⚠️ No changes to commit. Continuing anyway..."
          fi

          if ! git push heroku master --force; then
            echo "⚠️ Git push failed (possibly nothing new to push), continuing..."
          fi

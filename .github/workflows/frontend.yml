name: Frontend CI/CD

on:
  push:
    branches: 
      - develop-2.0
      - main
      - 'feature/**'
      - 'task/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - develop-2.0
      - main
      - 'hotfix/**'
jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with: 
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install deps
        run: npm install
      
      - name: Format code
        run: npm run format
      
      - name: Build frontend
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

  test-frontend:
    name: Test Frontend (Unit + E2E)
    runs-on: ubuntu-latest
    needs: build-frontend
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm install

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

      - name: Run unit tests
        run: npm run test:unit

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test-frontend
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm install

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npm install -g netlify-cli
          netlify deploy --prod --dir=dist --site=$NETLIFY_SITE_ID
